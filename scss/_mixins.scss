//Responsive Mixins
$breakpoints: (
  sm: 576px,
  smD: 575.99px,
  smU: 576.99px,
  md: 720px,
  mdD: 719.99px,
  mdU: 720.99px,
  lg: 992px,
  lgD: 991.99px,
  lgU: 992.99px,
  xl: 1140px,
  xlD: 1139.9px,
  xlU: 1140.99px,
  mobile-s: 320px,
  mobile-sD: 319.99px,
  mobile-sU: 320.99px,
  mobile-m: 375px,
  mobile-mD: 374.99px,
  mobile-mU: 375.99px,
  mobile-l: 425px,
  mobile-lD: 424.99px,
  mobile-lU: 425.99px,
  tablet: 768px,
  tabletD: 767.99px,
  tabletU: 768.99px,
  laptop: 1024px,
  laptopD: 1023.99px,
  laptopU: 1024.99px,
  laptop-l: 1440px,
  laptop-lD: 1439.99px,
  laptop-lU: 1440.99px,
  4k: 2560px,
  4kd: 2559.99px,
  4ku: 2560.99px
);

@mixin breakpointMin($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value !=null {
    @media screen and (min-width: $value) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name.";
  }
}

@mixin breakpointMax($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value !=null {
    @media screen and (max-width: $value) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name.";
  }
}

@mixin breakpointMinMax($minBreakpoint, $maxBreakpoint) {
  $minValue: map-get($breakpoints, $minBreakpoint);
  $maxValue: map-get($breakpoints, $maxBreakpoint);

  @if ($minValue !=null && $maxValue !=null) {
    @media screen and (min-width: $minValue) and (max-width: $maxValue) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint name.";
  }
}

//Clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}
